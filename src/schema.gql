# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Author {
  """
  Author's id
  """
  _id: Id!
  firstName: String!
  lastName: String!
  posts: [Post!]!
}

input AuthorInput {
  """
  Author's optional id
  """
  _id: Id
  firstName: String!
  lastName: String!
}

input AuthorPartialInput {
  """
  Author's optional id
  """
  _id: Id
  firstName: String
  lastName: String
}

type Color {
  """
  Color's id
  """
  _id: Id!

  """
  Color's code
  """
  code: ColorEnum!

  """
  Color's index
  """
  index: Int!

  """
  Color's  is selected by default ?
  """
  isSelectedByDefault: Boolean!

  """
  Color's label
  """
  label: String!

  """
  Color's version
  """
  version: Int!
}

enum ColorEnum {
  Default
  Error
  Info
  Primary
  Secondary
  Success
  Warning
}

input ColorPartialInput {
  """
  Color's optional id
  """
  _id: Id

  """
  Color's code
  """
  code: ColorEnum

  """
  Color's index
  """
  index: Int

  """
  Color's  is selected by default ?
  """
  isSelectedByDefault: Boolean

  """
  Color's label
  """
  label: String

  """
  Color's version
  """
  version: Int
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
Id scalar type
"""
scalar Id

type Mutation {
  """
  Author : Create mutation
  """
  createAuthor(author: AuthorInput!): Author!

  """
  Post : Create mutation
  """
  createPost(post: PostInput!): Post!

  """
  Author : Find one and update mutation
  """
  findOneAndUpdateAuthor(
    filter: AuthorPartialInput!
    update: AuthorPartialInput!
  ): Author!

  """
  Post : Find one and update mutation
  """
  findOneAndUpdatePost(
    filter: PostPartialInput!
    update: PostPartialInput!
  ): Post!

  """
  Author : Remove mutation
  """
  removeAuthors(filter: AuthorPartialInput!): Author!

  """
  Post : Remove mutation
  """
  removePosts(filter: PostPartialInput!): Post!

  """
  Author : Update many mutation
  """
  updateManyAuthors(
    filter: AuthorPartialInput!
    update: AuthorPartialInput!
  ): Author!

  """
  Post : Update many mutation
  """
  updateManyPosts(filter: PostPartialInput!, update: PostPartialInput!): Post!

  """
  Author : Update one mutation
  """
  updateOneAuthor(
    filter: AuthorPartialInput!
    update: AuthorPartialInput!
  ): Author!

  """
  Post : Update one mutation
  """
  updateOnePost(filter: PostPartialInput!, update: PostPartialInput!): Post!
}

type Post {
  """
  Post's id
  """
  _id: Id!
  author: Author!

  """
  Post's author id
  """
  authorId: Id!

  """
  Post's automatic memo
  """
  automaticMemo: String
  content: String!

  """
  Post's created at
  """
  createdAt: DateTime!

  """
  Post's creator id
  """
  creatorId: Id!

  """
  Post's internal memo
  """
  internalMemo: String

  """
  Post's memo
  """
  memo: String
  title: String!

  """
  Post's type id
  """
  typeId: Id!

  """
  Post's updated at
  """
  updatedAt: DateTime!

  """
  Post's updater id
  """
  updaterId: Id!
}

input PostInput {
  """
  Post's optional id
  """
  _id: Id

  """
  Post's author id
  """
  authorId: Id!

  """
  Post's automatic memo
  """
  automaticMemo: String = "Memo automatique généré via GraphQL"
  content: String!

  """
  Post's internal memo
  """
  internalMemo: String

  """
  Post's memo
  """
  memo: String
  title: String!

  """
  Post's type id
  """
  typeId: Id!

  """
  Post's version data
  """
  versionData: VersionDataInput = {
    automaticMemo: "Memo automatique généré via GraphQL"
  }
}

input PostPartialInput {
  """
  Post's optional id
  """
  _id: Id

  """
  Post's author id
  """
  authorId: Id

  """
  Post's automatic memo
  """
  automaticMemo: String = "Memo automatique généré via GraphQL"
  content: String

  """
  Post's internal memo
  """
  internalMemo: String

  """
  Post's memo
  """
  memo: String
  title: String

  """
  Post's type id
  """
  typeId: Id

  """
  Post's version data
  """
  versionData: VersionDataInput = {
    automaticMemo: "Memo automatique généré via GraphQL"
  }
}

type PostVersion {
  """
  Post Version's id
  """
  _id: Id!

  """
  Post Version's automatic memo
  """
  automaticMemo: String

  """
  Post Version's created at
  """
  createdAt: DateTime!

  """
  Post Version's creator id
  """
  creatorId: Id!

  """
  Post Version's internal memo
  """
  internalMemo: String

  """
  Post Version's memo
  """
  memo: String

  """
  Post Version's original id
  """
  originalId: Id!

  """
  Post Version's updated at
  """
  updatedAt: DateTime!

  """
  Post Version's updater id
  """
  updaterId: Id!

  """
  Post Version's version
  """
  version: Post!
}

type Query {
  """
  Author : Count all query
  """
  countAllAuthors: Int!

  """
  Color : Count all query
  """
  countAllColors: Int!

  """
  Post : Count all query
  """
  countAllPosts: Int!

  """
  Type : Count all query
  """
  countAllTypes: Int!

  """
  Author : Count some query
  """
  countSomeAuthors(filter: AuthorPartialInput!): Int!

  """
  Color : Count some query
  """
  countSomeColors(filter: ColorPartialInput!): Int!

  """
  Post : Count some query
  """
  countSomePosts(filter: PostPartialInput!): Int!

  """
  Type : Count some query
  """
  countSomeTypes(filter: TypePartialInput!): Int!
  findAllPostVersionsForOneOriginalId(originalId: Id!): [PostVersion!]!
  findOnePostVersionById(id: Id!): PostVersion!
  getAllActiveColors: [Color!]!
  getAllActiveTypes: [Type!]!

  """
  Author : Get all query
  """
  getAllAuthors: [Author!]!

  """
  Color : Get all query
  """
  getAllColors: [Color!]!
  getAllEnabledReferences: References!

  """
  Post : Get all query
  """
  getAllPosts: [Post!]!
  getAllReferences: References!

  """
  Type : Get all query
  """
  getAllTypes: [Type!]!

  """
  Author : Get one query
  """
  getOneAuthor(id: Id!): Author!

  """
  Color : Get one query
  """
  getOneColor(id: Id!): Color!

  """
  Post : Get one query
  """
  getOnePost(id: Id!): Post!

  """
  Type : Get one query
  """
  getOneType(id: Id!): Type!

  """
  Author : Get some query
  """
  getSomeAuthors(filter: AuthorPartialInput!): [Author!]!

  """
  Color : Get some query
  """
  getSomeColors(filter: ColorPartialInput!): [Color!]!

  """
  Post : Get some query
  """
  getSomePosts(filter: PostPartialInput!): [Post!]!

  """
  Type : Get some query
  """
  getSomeTypes(filter: TypePartialInput!): [Type!]!
}

type References {
  colors: [Color!]!
  types: [Type!]!
}

type Type {
  """
  Type's id
  """
  _id: Id!

  """
  Type's code
  """
  code: TypeEnum!

  """
  Type's index
  """
  index: Int!

  """
  Type's  is selected by default ?
  """
  isSelectedByDefault: Boolean!

  """
  Type's label
  """
  label: String!

  """
  Type's version
  """
  version: Int!
}

enum TypeEnum {
  CoverPage
  Normal
  TableOfContents
}

input TypePartialInput {
  """
  Type's optional id
  """
  _id: Id

  """
  Type's code
  """
  code: TypeEnum

  """
  Type's index
  """
  index: Int

  """
  Type's  is selected by default ?
  """
  isSelectedByDefault: Boolean

  """
  Type's label
  """
  label: String

  """
  Type's version
  """
  version: Int
}

input VersionDataInput {
  """
  Version Data's automatic memo
  """
  automaticMemo: String = "Memo automatique généré via GraphQL"

  """
  Version Data's internal memo
  """
  internalMemo: String

  """
  Version Data's memo
  """
  memo: String
}
